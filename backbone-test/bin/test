#!/usr/bin/env node

var reporter = 'dot';
process.argv.slice(2).forEach(function (arg) {
  switch (arg) {
    case '--xunit':
      reporter = 'xunit';
      break;
  }
});

requirejs = require("requirejs");
requirejs.config({
    nodeRequire: require,
    baseUrl: '.',
    paths: {
        // RequireJS Plugins
        cs: 'app/scripts/libs/requirejs/cs',
        text: 'app/scripts/libs/requirejs/text',
        requirejs: 'app/scripts/libs/requirejs/require',

        // 3rd party libs
        backbone: 'app/scripts/libs/backbone/0.9.1-amdjs/backbone',
        underscore: 'app/scripts/libs/underscore/1.3.1-amdjs/underscore',

        // Open-Goal-Tracker stuff.
        app: 'app/scripts/',
        templates: 'app/scripts/templates'
    }
});

// Ensure document is defined for backbone.
global.document = require("jsdom").jsdom();

requirejs(['require', 'mocha'], function(require, mocha){
    var suite = new mocha.Suite('', new mocha.Context);
    var ui = mocha.interfaces['tdd'];
    ui(suite);
    suite.emit('pre-require', root);

    require([
        'cs!test/unit/models/user_goal',
        'cs!test/unit/collections/user_goal',
        'cs!test/unit/views/user_goal_list',
        'cs!test/unit/routers/user_goal'
        ], function(module){
        suite.emit('run');
        var runner = new mocha.Runner(suite);
        // When running with nodejs, we need to instantiate window
        // and navigator global objects.
        runner.ignoreLeaks = true;
        if (reporter === 'xunit'){
            var mocha_reporter = new mocha.reporters.XUnit(runner);
        } else {
            var mocha_reporter = new mocha.reporters.Dot(runner);
        }
        return runner.run();
    });
});
